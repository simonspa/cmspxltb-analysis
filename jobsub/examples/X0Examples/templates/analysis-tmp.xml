<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!-- 

==========================================================================================
                     Steering file template for the pysub framework

                               ==> converter-tmp.xml <===

Author: Antonio Bulgheroni, INFN <mailto:antonio.bulgheroni@gmail.com>
Version: $Id: converter-tmp.xml,v 1.2 2009-05-14 18:25:21 bulgheroni Exp $
==========================================================================================

--> 


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA1"/>
      <processor name="UniversalNativeReader"/>
      <@RunHotPixelKillerCommentLeft@processor name="Mimosa26EUTelAutoPedestalNoiseProcessor"/@RunHotPixelKillerCommentRight@>
      <@RunHotPixelKillerCommentLeft@processor name="HotPixelKiller"/@RunHotPixelKillerCommentRight@>
      <processor name="Save1"/>

      <processor name="AIDA2"/>
      <@UseHotPixelKillerCommentLeft@processor name="LoadHotPixelDB"/@UseHotPixelKillerCommentRight@>
      <processor name="Autopedestalnoise"/>
      <processor name="Clustering"/>
      <processor name="Save2"/>

      <processor name="AIDA3"/>
      <processor name="LoadRefHitDB"/>
      <@UseOffsetDBCommentLeft@processor name="LoadOffsetDB"/@UseOffsetDBCommentRight@>
      <processor name="HitMakerM26"/>
      <processor name="PreAligner"/> 
      <processor name="Correlator"/> 
      <processor name="Save3"/>
      
      <processor name="AIDA4"/>
      <processor name="LoadPreAlignment"/>
      <processor name="ApplyPreAlignment"/>
      <processor name="DafFitter"/>
      <processor name="Align"/>
      <processor name="Save4"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles">@LcioRawFolder@/@LcioFile@ </parameter>
      <parameter name="GearXMLFile" value="@GearFolder@/@GearFile@"/>
      <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
      <parameter name="SkipNEvents" value="0"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="@Verbosity@"/>
   </global>

   <processor name="AIDA1" type="AIDAProcessor">
     <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
     <!-- compression of output file 0: false >0: true (default) -->
     <parameter name="Compress" type="int" value="1"/>
     <!-- filename without extension-->
     <parameter name="FileName" type="string" value= "@HistoFolder@/run@RunNumber@-converter-histo"/>
     <!-- type of output file xml (default) or root ( only OpenScientist)-->
     <parameter name="FileType" type="string" value="root"/>
   </processor>

   <processor name="UniversalNativeReader" type="EUTelNativeReader">
     <!--Reads data streams produced by EUDAQ and produced the corresponding LCIO output-->
     <!--This is the depfet produced output collection-->
     <parameter name="DEPFETOutputCollection" type="string" lcioOutType="TrackerData"> rawdata_dep </parameter>
     <!--This is the eudrb producer output collection when read in RAW mode-->
     <parameter name="EUBRDRawModeOutputCollection" type="string" lcioOutType="TrackerRawData"> rawdata </parameter>
     <!--This si the mimotel output collection when read in ZS mode-->
     <parameter name="EUDRBZSModeOutputCollection" type="string" lcioOutType="TrackerData"> zsdata </parameter>
     <!-- Sorry, this parameter isn't a default parameter for this processor: description and type lost!!     -->
     <parameter name="DEPFETSensorIDVec" value="8"/>
     <!-- Sorry, this parameter isn't a default parameter for this processor: description and type lost!!     -->
     <parameter name="EUDRBSensorIDVec"> 0 1 2 3 4 5 </parameter>
     <!--Type of sparsified pixel data structure (use SparsePixelType enumerator)-->
     <!--parameter name="EUDRBSparsePixelType" type="int" value="1"/-->
     <!--The geometry identification number-->
     <parameter name="GeoID" type="int" value="100"/>
     <!--This is the input file name-->
     <parameter name="InputFileName" type="string" value="@NativeFolder@/run@RunNumber@.raw     "/>
     <!--Resynchronize the events based on the TLU trigger ID-->
     <parameter name="SyncTriggerID" type="bool" value="true"/>
   </processor>

   <processor name="Mimosa26EUTelAutoPedestalNoiseProcessor" type="EUTelAutoPedestalNoiseProcessor">
     <!--EUTelAutoPedestalNoiseProcessor produces initial pedestal / noise / status with user provided values-->
     <!--Noise local collection-->
     <parameter name="NoiseCollectionName" type="string" lcioOutType="TrackerData"> m26_noise </parameter>
     <!--Pedestal local collection-->
     <parameter name="PedestalCollectionName" type="string" lcioOutType="TrackerData"> m26_pedestal </parameter>
     <!--Pixel status collection-->
     <parameter name="StatusCollectionName" type="string" lcioOutType="TrackerRawData"> m26_status </parameter>
     <!--The initial value of noise (one value for detector)-->
     <parameter name="InitNoiseValue" type="FloatVec"> 1 1 1 1 1 1 </parameter>
     <!--The initial value of pedestal (one value for detector)-->
     <parameter name="InitPedestalValue" type="FloatVec"> 0 0 0 0 0 0 </parameter>
     <!--The maximum pixel along x (default 255, one value per detector)-->
     <parameter name="MaxXVector" type="IntVec"> 1151 1151 1151 1151 1151 1151</parameter>
     <!--The maximum pixel along y (default 255, one value per detector)-->
     <parameter name="MaxYVector" type="IntVec"> 575 575 575 575 575 575  </parameter>
     <!--The minimum pixel along x (default 0, one value per detector)-->
     <parameter name="MinXVector" type="IntVec"> 0 0 0 0 0 0  </parameter>
     <!--The minimum pixel along y (default 0, one value per detector)-->
     <parameter name="MinYVector" type="IntVec"> 0 0 0 0 0 0</parameter>
     <!--The sensorID for the generated collection (one per detector)-->
     <parameter name="SensorIDVec" type="IntVec"> 0 1 2 3 4 5 </parameter>
  </processor>

  <processor name="HotPixelKiller" type="EUTelHotPixelKiller">
    <!--This is the name of the LCIO file name with the input/output hot pixel collection  (add .slcio)-->
    <parameter name="HotPixelDBFile" type="string" value="@DBFolder@/@RunNumber@-hotpixel-db.slcio"/>
    <parameter name="HotPixelCollectionName" type="string" value="hotpixel_m26" />

    <!--EUTelHotPixelKiller periodically check for pixel singing loud too often and remove them from the analysis-->

    <!--
        INPUT / OUTPUT
    -->
    <!--Input calibrated data not zero suppressed collection name-->
    <parameter name="NZSDataCollectionName" type="string" lcioInType="TrackerData"> data </parameter>
    <!--Noise (input) collection name-->
    <parameter name="NoiseCollectionName" type="string" lcioInType="TrackerData"> m26_noise </parameter>
    <!--Pixel status (input) collection name-->
    <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData"> m26_status </parameter>
    <!--Input of Zero Suppressed data-->
    <parameter name="ZSDataCollectionName" type="string" lcioInType="TrackerData"> zsdata_m26 </parameter>
   
    <parameter name="BuildHotPixelDatabase" type="int" value="1" />
    

    <!--This float number [0,1] represents the maximum allowed firing frequency
        within the selected number of event per cycle-->
    <parameter name="MaxAllowedFiringFreq" type="float" value="0.01"/>
    <!--The number of events to be considered for each update cycle-->
    <parameter name="NoOfEventPerCycle" type="int" value="999"/>
    <!--The total number of hot pixel cycle-->
    <parameter name="TotalNoOfCycle" type="int" value="0"/>
  </processor>

 
  <processor name="Save1" type="EUTelOutputProcessor">
    <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
    <!--drops the named collections from the event-->
    <parameter name="DropCollectionNames" type="StringVec"> firstFrame secondFrame thirdFrame </parameter>
    <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@LcioRawFolder@/run@RunNumber@.slcio  "/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="100000"/-->
</processor>

<!--CLUSTERING-->
   <processor name="AIDA2" type="AIDAProcessor">
     <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
     <!-- compression of output file 0: false >0: true (default) -->
     <parameter name="Compress" type="int" value="1"/>
     <!-- filename without extension-->
     <parameter name="FileName" type="string" value= "@HistoFolder@/run@RunNumber@-cluster-histo"/>
     <!-- type of output file xml (default) or root ( only OpenScientist)-->
     <parameter name="FileType" type="string" value="root"/>
   </processor>
 <processor name="Autopedestalnoise" type="EUTelAutoPedestalNoiseProcessor">
 <!--EUTelAutoPedestalNoiseProcessor produces initial pedestal / noise / status with user provided values-->
  <!--Noise local collection-->
  <parameter name="NoiseCollectionName" type="string" lcioOutType="TrackerData"> m26_noise </parameter>
  <!--Pedestal local collection-->
  <parameter name="PedestalCollectionName" type="string" lcioOutType="TrackerData"> m26_pedestal </parameter>
  <!--Pixel status collection-->
  <parameter name="StatusCollectionName" type="string" lcioOutType="TrackerRawData"> m26_status </parameter>
  <!--The initial value of noise (one value for detector)-->
  <parameter name="InitNoiseValue" type="FloatVec"> 1 1 1 1 1 1 </parameter>
  <!--The initial value of pedestal (one value for detector)-->
  <parameter name="InitPedestalValue" type="FloatVec"> 0 0 0 0 0 0 </parameter>
  <!--The maximum pixel along x (default 255, one value per detector)-->
  <parameter name="MaxXVector" type="IntVec"> 1151 1151 1151 1151 1151 1151</parameter>
  <!--The maximum pixel along y (default 255, one value per detector)-->
  <parameter name="MaxYVector" type="IntVec"> 575 575 575 575 575 575  </parameter>
  <!--The minimum pixel along x (default 0, one value per detector)-->
  <parameter name="MinXVector" type="IntVec"> 0 0 0 0 0 0  </parameter>
  <!--The minimum pixel along y (default 0, one value per detector)-->
  <parameter name="MinYVector" type="IntVec"> 0 0 0 0 0 0</parameter>
  <!--The sensorID for the generated collection (one per detector)-->
  <parameter name="SensorIDVec" type="IntVec"> 0 1 2 3 4 5 </parameter>
</processor>

  <processor name="LoadHotPixelDB" type="ConditionsProcessor">
    <parameter name="SimpleFileHandler" type="StringVec"> hotpixel_m26  @DBFolder@/@RunNumber@-hotpixel-db.slcio hotpixel_m26 </parameter>
  </processor>


  <processor name="Clustering" type="EUTelClusteringProcessor">
    <!--EUTelClusteringProcessor is looking for clusters into a calibrated pixel matrix.-->
   
    <parameter name="HotPixelCollectionName" type="string" value="hotpixel_m26" />
  
    <!--
        INPUT / OUTPUT
    -->
    <!--Input calibrated data not zero suppressed collection name-->
    <parameter name="NZSDataCollectionName" type="string" lcioInType="TrackerData"> data </parameter>
    <!--Noise (input) collection name-->
    <parameter name="NoiseCollectionName" type="string" lcioInType="TrackerData"> m26_noise </parameter>
    <!--Pixel status (input) collection name-->
    <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData"> m26_status </parameter>
    <!--Input of Zero Suppressed data-->
    <parameter name="ZSDataCollectionName" type="string" lcioInType="TrackerData"> zsdata_m26 </parameter>
    <!--Cluster (output) collection name-->
    <parameter name="PulseCollectionName" type="string" lcioOutType="TrackerPulse"> cluster_m26 </parameter>

    <!--
        Clustering algorithm
    -->
    <!--Select here which algorithm should be used for NZS clustering.
        Available algorithms are:
        -> FixedFrame: for custer with a given size-->
    <parameter name="ClusteringAlgo" type="string" value="FixedFrame"/>

    <!--Select here which algorithm should be used for ZS clustering.
        Available algorithms are:
        -> SparseCluster: for cluster in ZS frame
        -> SparseCluster2: for cluster in ZS frame with better performance
        -> FixedFrame: for cluster with a given size
        -> DFixedFrame: for cluster with a given size-->
    <parameter name="ZSClusteringAlgo" type="string" value="SparseCluster"/>


    <!--
        FIXED FRAME ( for both NZS and ZS )
        for DFixedFrame:
        use 5x5 for threshold ~< 9
        use 3x3 for threshold ~> 9        
    -->
    <!--Threshold in SNR for seed pixel identification-->
    <parameter name="FFSeedCut" type="float" value="0.0"/>
    <!--Threshold in SNR for cluster identification-->
    <parameter name="FFClusterCut" type="float" value="0.0"/>
    <!--Maximum allowed cluster size along x (only odd numbers)-->
    <parameter name="FFClusterSizeX" type="int" value="5"/>
    <!--Maximum allowed cluster size along y (only odd numbers)-->
    <parameter name="FFClusterSizeY" type="int" value="5"/>

    <!--
        SPARSECLUSTER and SPARSECLUSTER2 (use with care!)
        
        for SparseCluster:
            SparseMinDistance = 2 (in the code minDistance => distance between  neighb.pixels .le. SparseMinDistance)
            ==>  findNeighborPixels(double minDistance)
        
        for SparseCluster2:
            SparseMinDistance = 0 ( in the code minSignal => ADC in the neigbh.pixel .ge. SparseMinDistance )
            ==>  EUTelSparseData2Impl<PixelType>::findNeighborPixels(double  minSignal)
            in principle can be used as default clustering algo.        
    -->
    <!--Threshold in SNR for clusters contained in ZS data-->
    <parameter name="SparseClusterCut" type="float" value="0.0"/>
    <!--Threshold in SNR for seed pixel contained in ZS data-->
    <parameter name="SparseSeedCut" type="float" value="0.0"/>
    <!--Minimum distance between sparsified pixel ( touching == sqrt(2)) -->
    <!-- carefull with this one! see comments above. -->
    <parameter name="SparseMinDistance" type="float" value="0"/>

    <!--
        HISTOGRAMMING
    -->
    <!--Switch on or off the histogram filling-->
    <parameter name="HistogramFilling" type="bool" value="true"/>
    <!--This is the name of the histogram information file-->
    <parameter name="HistoInfoFileName" type="string" value=""/>
    <!--The list of cluster N to be filled.For example 7 means filling the cluster spectra with the 7 most significant pixels-->
    <parameter name="ClusterN" type="IntVec" value="4 6 8 9"/>
    <!--The list of cluster NxN to be filled.For example 3 means filling the 3x3 histogram spectrum-->
    <parameter name="ClusterNxN" type="IntVec" value="3"/>

  </processor>


  <processor name="HotPixelKiller2" type="EUTelHotPixelKiller">
    <!--EUTelHotPixelKiller periodically check for pixel singing loud too often and remove them from the analysis-->
    <!--Pixel status collection-->
    <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData"> m26_status </parameter>
    <!--This float number [0,1] represents the maximum allowed firing frequency
        within the selected number of event per cycle-->
    <parameter name="MaxAllowedFiringFreq" type="float" value="0.01"/>
    <!--The number of events to be considered for each update cycle-->
    <parameter name="NoOfEventPerCycle" type="int" value="1000"/>
    <!--The total number of hot pixel cycle-->
    <parameter name="TotalNoOfCycle" type="int" value="0"/>
  </processor>


  <processor name="Correlator2" type="EUTelCorrelator">
    <!--EUTelCorrelator fills histograms with correlation plots-->
    <!--Cluster (pulse) collection name-->
    <parameter name="InputClusterCollections" type="StringVec" > cluster_m26  </parameter>
    <parameter name="HotPixelCollectionName" type="string" value="hotpixel_m26" />
    <!-- -->
    <parameter name="ClusterChargeMinimum" type="int" value="1"/>
    <!-- -->
    <parameter name="MinNumberOfCorrelatedHits" type="int" value="5"/>
    <parameter name="Events"  type="int" value="9999"/>

    <!--Residual cuts along both size in microns-->
    <parameter name="ResidualsXMax" type="FloatVec">  20.0  20.0  20.0       20.0  20.0  20.0          </parameter>
    <parameter name="ResidualsXMin" type="FloatVec"> -20.0 -20.0 -20.0      -20.0 -20.0 -20.0          </parameter>
    <parameter name="ResidualsYMax" type="FloatVec">  20.0  20.0  20.0       20.0  20.0  20.0          </parameter>
    <parameter name="ResidualsYMin" type="FloatVec"> -20.0 -20.0 -20.0      -20.0 -20.0 -20.0          </parameter>

  </processor>


  <processor name="Save2" type="EUTelOutputProcessor">
    <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
    <!--drops the named collections from the event-->

    <!--parameter name="DropCollectionNames" type="StringVec"> 
           rawdata status noise pedestal data zsdata 
    </parameter-->

    <!--drops all collections of the given type from the event-->
    <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
    <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
    <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
    <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
    <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
    <!-- name of output file -->
    <parameter name="LCIOOutputFile" type="string" value="@ResultsFolder@/@RunNumber@-cluster.slcio"/>
    <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
    <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
    <!--Set it to true to remove intermediate EORE in merged runs-->
    <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
    <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
    <!--parameter name="SplitFileSizekB" type="int" value="500000"/-->
  </processor>

<!--HITMAKER-->
   <processor name="AIDA3" type="AIDAProcessor">
     <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
     <!-- compression of output file 0: false >0: true (default) -->
     <parameter name="Compress" type="int" value="1"/>
     <!-- filename without extension-->
     <parameter name="FileName" type="string" value= "@HistoFolder@/run@RunNumber@-hit-histo"/>
     <!-- type of output file xml (default) or root ( only OpenScientist)-->
     <parameter name="FileType" type="string" value="root"/>
   </processor>
  <processor name="LoadRefHitDB"     type="ConditionsProcessor">
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <parameter name="SimpleFileHandler" type="StringVec"> refhit  @DBFolder@/@RunNumber@-refhit-db.slcio referenceHit  </parameter>
  </processor>

  <processor name="LoadHotPixelDB2" type="ConditionsProcessor">
    <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
    <!--Initialization of a conditions database handler-->
    <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
    <!--Initialization of a conditions db file handler-->
    <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
    <!--Initialization string for conditions database-->
    <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
    <!--Initialization of a data file handler-->
    <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
    <!--Initialization of a simple conditions file handler-->
    <parameter name="SimpleFileHandler" type="StringVec"> hotpixel_m26   @DBFolder@/@RunNumber@-hotpixel-db.slcio hotpixel_m26  </parameter>
  </processor>


  <processor name="LoadOffsetDB" type="ConditionsProcessor">
   <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
   <parameter name="SimpleFileHandler" type="StringVec"> preAlignment @DBFolder@/@RunNumber@-offset-db.slcio preAlignment </parameter>
  </processor>

 <processor name="Mimosa26EUTelAutoPedestalNoiseProcessor2" type="EUTelAutoPedestalNoiseProcessor">
 <!--EUTelAutoPedestalNoiseProcessor produces initial pedestal / noise / status with user provided values-->
  <!--Noise local collection-->
  <parameter name="NoiseCollectionName" type="string" lcioOutType="TrackerData"> noiseDB </parameter>
  <!--Pedestal local collection-->
  <parameter name="PedestalCollectionName" type="string"  lcioOutType="TrackerData"> pedestalDB </parameter>
  <!--Pixel status collection-->
  <parameter name="StatusCollectionName" type="string" lcioOutType="TrackerRawData"> statusDB   </parameter>
  <!--The initial value of noise (one value for detector)-->
  <parameter name="InitNoiseValue" type="FloatVec"> 1 1 1 1 1 1     </parameter>
  <!--The initial value of pedestal (one value for detector)-->
  <parameter name="InitPedestalValue" type="FloatVec"> 0 0 0 0 0 0   </parameter>
  <!--The maximum pixel along x (default 255, one value per detector)-->
  <parameter name="MaxXVector" type="IntVec"> 1151 1151 1151 1151 1151 1151 </parameter>
  <!--The maximum pixel along y (default 255, one value per detector)-->
  <parameter name="MaxYVector" type="IntVec"> 575 575 575 575 575 575     </parameter>
  <!--The minimum pixel along x (default 0, one value per detector)-->
  <parameter name="MinXVector" type="IntVec"> 0 0 0 0 0 0   </parameter>
  <!--The minimum pixel along y (default 0, one value per detector)-->
  <parameter name="MinYVector" type="IntVec"> 0 0 0 0 0 0   </parameter>
  <!--The sensorID for the generated collection (one per detector)-->
  <parameter name="SensorIDVec" type="IntVec"> 0 1 2 3 4 5  </parameter>
</processor>

 <processor name="HitMakerM26" type="EUTelHitMaker">
 <!--EUTelHitMaker is responsible to translate cluster centers from the local frame of reference to the external frame of reference using the GEAR geometry description-->
  <!--Cluster (pulse) collection name-->
  <parameter name="PulseCollectionName" type="string" lcioInType="TrackerPulse"> cluster_m26 </parameter>
  <!--Hit collection name-->
  <parameter name="HitCollectionName" type="string" lcioOutType="TrackerHit"> hit </parameter>
  <!--Select here how the center of gravity should be calculated.
FULL: using the full cluster
NPixel: using only the first N most significant pixels (set NPixel too)
NxMPixel: using a subframe of the cluster N x M pixels wide (set NxMPixel too).-->
  <parameter name="CoGAlgorithm" type="string" value="FULL"/>
  <!--If true a 3D histo will be filled. It may require large memory-->
  <parameter name="Enable3DHisto" type="bool" value="false"/>
  <!--The name of the collections containing the eta function (x and y respectively)-->
  <!--parameter name="EtaCollectionName" type="StringVec"> xEta yEta </parameter-->
  <!--Enable or disable eta correction-->
  <parameter name="EtaSwitch" type="bool" value="false"/>
  <!--The number of most significant pixels to be used if CoGAlgorithm is "NPixel"-->
  <!--parameter name="NPixel" type="int" value="9"/-->
  <!--The submatrix size to be used for CoGAlgorithm = "NxMPixel"-->
  <parameter name="NxMPixel" type="IntVec"> 3 3 </parameter>
  <parameter name="ReferenceHitFile" type="string"> @DBFolder@/@RunNumber@-refhit-db.slcio </parameter>
 </processor>


 <processor name="Save3" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <parameter name="DropCollectionNames" type="StringVec"> filteredcluster zsdata refilteredcluster </parameter>
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@ResultsFolder@/@RunNumber@-hit.slcio "/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!-- parameter name="SplitFileSizekB" type="int" value="1000000"/-->
</processor>

 <processor name="GeoSelection" type="EUTelClusterFilter">
 <!--EUTelClusterFilter is a very powerful tool. It allows to select among an input collection of TrackerPulse
only the clusters fulfilling a certain set of selection criteria.
The user can modify the switch on and off each selection cut and set the proper value for that via the processor parameter.-->
  <!--This is the input Tracker Pulse collection that should be filtered-->
  <parameter name="InputPulseCollectionName" type="string" lcioInType="TrackerPulse"> cluster_m26 </parameter>
  <!--This is the output Tracker Pulse collection containing the filtered clusters-->
  <parameter name="OutputPulseCollectionName" type="string" lcioOutType="TrackerPulse"> refilteredcluster </parameter>
  <!--This is the minimum allowed total charge in to a cluster.
One floating point number for each sensor in the telescope-->
  <parameter name="ClusterMinTotalCharge" type="FloatVec"> 0 0 0 0 0 0  0 0 0</parameter>
  <!--This is the minimum charge that a cluster of N pixels has to have.
The first figure has to be the number of pixels to consider in the cluster, 
then one float number for each sensor.-->
  <parameter name="ClusterNMinCharge" type="FloatVec"> 0 0 0 0 0 0   0 0 0</parameter>
  <!--This is the minimum SNR that a cluster of N pixels has to have.
The first figure has to be the number of pixels to consider in the cluster, 
then one float number for each sensor. Setting N = 0 is enough to disable the cut.-->
  <parameter name="ClusterNMinSNR" type="FloatVec"> 0 0 0 0 0 0  0 0 0 </parameter>
  <!--This is the minimum charge that a cluster of N times N pixels has to have.
The first figure is the subcluster size in pixels (odd number), then one floating number for each 
planes. To switch this selection off, set all numbers to zero.-->
  <parameter name="ClusterNxNMinCharge" type="FloatVec"> 0 0 0 0 0 0  0 0 0 </parameter>
  <!--This is the minimum SNR that a cluster of N times N pixels has to have.
The first figure is the subcluster size in pixels (odd number), then one floating number for each 
planes. To switch this selection off, set at least the first number to zero.-->
  <parameter name="ClusterNxNMinSNR" type="FloatVec"> 0 0 0 0 0 0  0 0 0 </parameter>
  <!--This is the required quality for the cluster.
One integer number for each detector according to ClusterQuality.
Put a negative number to disable the cut-->
  <parameter name="ClusterQuality" type="IntVec"> -1 -1 -1 -1 -1 -1   -1 -1 -1</parameter>
  <!--Define here ROI's. The first number (integer) is the detector ID.
The other four float are xBotLeft  yBotLeft xTopRight yTopRight.
To disable it, just put a negative number as detector ID.-->
  <parameter name="InsideRegion" type="FloatVec"> -1 260 260 500 500 </parameter>
  <!--This is maximum allowed cluster noise.
One floating number for each detector. Write a negative number to disable the cut-->
  <parameter name="MaxClusterNoise" type="FloatVec"> -1 -1 -1 -1 -1 -1   -1 -1 -1</parameter>
  <!--This is the maximum allowed number of cluster per plane.
 One integer number for each detector. Write a negative number to disable the cut-->
  <parameter name="MaxClusterPerPlane" type="IntVec"> -1 -1 -1 -1 -1 -1   -1 -1 -1</parameter>
  <!--This is the minimum required number of cluster per plane.
One integer number for each detector. Write 0 to disable the cut-->
  <parameter name="MinClusterPerPlane" type="IntVec"> 0 0 0 0 0 0   1 0 0 </parameter>
  <!--This is the minimum allow total cluster SNR
One floating number for each detector. Write 0 to disable the cut-->
  <parameter name="MinTotalClusterSNR" type="FloatVec"> 0 0 0 0 0 0  0 0 0 </parameter>
  <!--This is the name of the noise collection.
The presence of this collection in the event is allowing all the noise based selection cuts-->
  <!--parameter name="NoiseCollectionName" type="string" value="noiseDB"/-->
  <!--Define here ROI's. The first number (integer) is the detector ID.
The other four float are xBotLeft  yBotLeft xTopRight yTopRight.
To disable it, just put a negative number as detector ID.-->
  <parameter name="OutsideRegion" type="FloatVec"> -1 10 10 40 40 </parameter>
  <!--Setting this to true will select only events having the same number 
of hits for each plane.-->
  <parameter name="SameNumberOfHits" type="bool" value="false"/>
  <!--This is the minimum allowed charge that the seed pixel of a cluster has to have.
One floating number for each detector-->
  <parameter name="SeedMinCharge" type="FloatVec"> 0 0 0 0 0 0    0 0 0</parameter>
  <!--This is the minimum allowed SNR that the seed pixel of a cluster has to have.
One floating number for each detector. Set to 0 to disable-->
  <parameter name="SeedMinSNR" type="FloatVec"> 0 0 0 0 0 0   0 0 0</parameter>
  <!--If true, a SkipEventException is thrown if after selection
there are no cluster left.-->
  <parameter name="SkipEmptyEvent" type="bool" value="true"/>
  <!--This is the name of the status collection.
The presence of this collection in the event is allowing all the noise based selection cuts-->
  <!--parameter name="StatusCollectionName" type="string" value="statusDB"/-->
</processor>

  <processor name="PreAligner" type="EUTelPreAlign">
    <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
    <parameter name="AlignmentConstantLCIOFile" type="string"> @DBFolder@/@RunNumber@-prealign-db.slcio </parameter>
    <parameter name="ReferenceCollection" type="string" > refhit </parameter>
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
    <parameter name="MinNumberOfCorrelatedHits" type="int" value="5"/>
    <parameter name="Events"  type="int" value="999"/>
    <parameter name="HotPixelCollectionName" type="string" value="hotpixel_m26"/>

    <!--Residual cuts along both size in microns-->
    <parameter name="ResidualsXMax" type="FloatVec">  1.0  1.0  1.0    3.0  5.0  7.0          </parameter>
    <parameter name="ResidualsXMin" type="FloatVec"> -1.0 -1.0 -1.0   -3.0 -5.0 -7.0          </parameter>
    <parameter name="ResidualsYMax" type="FloatVec">  1.0  1.0  1.0    3.0  5.0  7.0          </parameter>
    <parameter name="ResidualsYMin" type="FloatVec"> -1.0 -1.0 -1.0   -3.0 -5.0 -7.0          </parameter>
 </processor>
 
<processor name="Correlator" type="EUTelCorrelator">
 <!--EUTelCorrelator fills histograms with correlation plots-->
  <!--Hit collection name-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
  <!-- -->
  <parameter name="DumpOffset" type="bool" > false </parameter>
  <parameter name="ReferenceCollection" type="string" > refhit </parameter>
  <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
  <parameter name="MinNumberOfCorrelatedHits" type="int" value="5"/>
  <parameter name="Events"  type="int" value="999"/>

  <!--Residual cuts along both size in microns-->
    <parameter name="ResidualsXMax" type="FloatVec">  1.0  1.0  1.0     3.0  5.0  7.0          </parameter>
    <parameter name="ResidualsXMin" type="FloatVec"> -1.0 -1.0 -1.0    -3.0 -5.0 -7.0          </parameter>
    <parameter name="ResidualsYMax" type="FloatVec">  1.0  1.0  1.0     3.0  5.0  7.0          </parameter>
    <parameter name="ResidualsYMin" type="FloatVec"> -1.0 -1.0 -1.0    -3.0 -5.0 -7.0          </parameter>

</processor>



<!--ALIGNMENT-->
   <processor name="AIDA4" type="AIDAProcessor">
     <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
     <!-- compression of output file 0: false >0: true (default) -->
     <parameter name="Compress" type="int" value="1"/>
     <!-- filename without extension-->
     <parameter name="FileName" type="string" value= "@HistoFolder@/run@RunNumber@-align-histo"/>
     <!-- type of output file xml (default) or root ( only OpenScientist)-->
     <parameter name="FileType" type="string" value="root"/>
   </processor>
  <processor name="LoadHotPixelDB3" type="ConditionsProcessor">
    <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
    <!--Initialization of a conditions database handler-->
    <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
    <!--Initialization of a conditions db file handler-->
    <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
    <!--Initialization string for conditions database-->
    <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
    <!--Initialization of a data file handler-->
    <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
    <!--Initialization of a simple conditions file handler-->
    <parameter name="SimpleFileHandler" type="StringVec"> hotpixel_m26  @DBFolder@/@RunNumber@-hotpixel-db.slcio hotpixel_m26 </parameter>
  </processor>

  <processor name="LoadRefHitDB2"     type="ConditionsProcessor">
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <parameter name="SimpleFileHandler" type="StringVec"> refhit  @DBFolder@/@RunNumber@-refhit-db.slcio referenceHit  </parameter>
  </processor>

  <processor name="LoadPreAlignment" type="ConditionsProcessor">
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <parameter name="SimpleFileHandler" type="StringVec"> prealign @DBFolder@/@RunNumber@-prealign-db.slcio alignment </parameter>
  </processor>

  <processor name="ApplyPreAlignment" type="EUTelApplyAlignmentProcessor">
    <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> prealign </parameter>
    <parameter name="alignmentCollectionNames"> prealign </parameter>
    <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
    <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> PreAlignedHit </parameter>
    <parameter name="CorrectionMethod" type="int" value="1"/>
    <parameter name="ReferenceCollection" type="string" > refhit </parameter>
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
    <parameter name="DoAlignCollection" type="bool" value="true"/>
    <parameter name="HistogramSwitch" type="bool" value="false"/>
    <parameter name="DEBUG" type="bool" value="false"/>
    <parameter name="PrintEvents" type="int" value="0"/>
  </processor>

  <processor name="DafFitter" type="EUTelDafFitter">
    <parameter name="TelescopePlanes" type="IntVec"> 0 1 2 3 4 5 </parameter>
    <parameter name="DutPlanes" type="IntVec">  </parameter>
    <parameter name="FitDuts" type="bool" value="false"/>
    <parameter name="MakePlots" type="bool" value="true"/>
    <parameter name="RequireNTelPlanes" type="float" value="6"/>
    <parameter name="HitCollectionName" type="string" lcioInType="TrackerHit"> PreAlignedHit </parameter>
    <parameter name="TrackCollectionName" type="string" lcioInType="Track"> track </parameter>
    <parameter name="AlignmentCollectionNames">prealign    </parameter>
    <parameter name="ReferenceCollection" type="string" > refhit </parameter>
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
    <parameter name="Ebeam" type="float" value="4"/>
    <parameter name="TelResolutionX" type="float" value="180"/>
    <parameter name="TelResolutionY" type="float" value="180"/>
    <parameter name="DutResolutionX" type="float" value="2500" />
    <parameter name="DutResolutionY" type="float" value="500"/>
    <parameter name="NominalDxdz" type="float" value="0.0"/>
    <parameter name="NominalDydz" type="float" value="0.0"/>
    <parameter name="FinderRadius" type="float" value="500" />
    <parameter name="Chi2Cutoff" type="float" value="100"/>
    <parameter name="MaxChi2OverNdof" type="float" value="10"/>
    <parameter name="NDutHits" type="int" value="0"/>
  </processor>


 <processor name="Align" type="EUTelMille">
 <!--EUTelMille uses the MILLE program to write data files for MILLEPEDE II.-->
  <parameter name="MimosaClusterChargeMin" type="int" value="0" />
  <parameter name="ReferenceCollection" type="string" > refhit </parameter>
  <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>

  <!--This is the name of the LCIO file name with the output alignmentconstants (add .slcio)-->
  <parameter name="AlignmentConstantLCIOFile" type="string" value="@DBFolder@/@RunNumber@-align-db.slcio"/>

  <!--Name of the Millepede binary file.-->
  <parameter name="BinaryFilename" type="string" value="@ResultsFolder@/@RunNumber@-align-mille.bin"/>

  <!--Name of the steering file for the pede program.-->
  <parameter name="PedeSteerfileName" type="string" value="@ResultsFolder@/@RunNumber@-pede-steer.txt"/>

  <!--Execute the pede program using the generated steering file.-->
  <parameter name="RunPede" type="int" value="@RunPede@"/>

  <!--Use cuts on the residuals to reduce the combinatorial background. 0 for off (default), 1 for on-->
  <parameter name="UseResidualCuts" type="int" value="@UseResidualCuts@"/>

  <!--Residual cuts along both size in microns-->
  <parameter name="ResidualsXMax" type="FloatVec"> @ResidualXMax@ </parameter>
  <parameter name="ResidualsXMin" type="FloatVec"> @ResidualXMin@ </parameter>
  <parameter name="ResidualsYMax" type="FloatVec"> @ResidualYMax@ </parameter>
  <parameter name="ResidualsYMin" type="FloatVec"> @ResidualYMin@ </parameter>
  
  <!-- 
       ========================
       Parameters not modified 
       ========================
  -->
  <!--Hit collection name-->
  <parameter name="HitCollectionName" type="string" lcioInType="TrackerHit">   PreAlignedHit </parameter>
  <!--Track collection name-->
  <parameter name="TrackCollectionName" type="string" lcioInType="Track"> track </parameter>
  <!--Number of alignment constants used. Available mode are: 1 - shifts in the X and Y directions and a rotation around the Z axis, 2 - only shifts in the X and Y directions-->
  <parameter name="AlignMode" type="int" value="3"/>
  <parameter name="AllowedMissingHits" type="int" value="0"/>
  <!--Maximal allowed distance between hits entering the fit per 10 cm space between the planes.-->
  <!--Exclude planes from fit.-->
  <parameter name="ExcludePlanes" type="IntVec"> </parameter>
  <!--Fix sensor planes in the fit according to their sensor ids.-->
  <parameter name="FixedPlanes" type="IntVec">@FixedPlanes@ </parameter>
  <!--Generate a steering file for the pede program.-->
  <parameter name="GeneratePedeSteerfile" type="int" value="1"/>
  <!--Selects the source of input hits. 0 - hits read from hitfile with simple trackfinding. 1 - hits read from output of tracking processor. 2 - Test mode. Simple internal simulation and simple trackfinding.-->
  <parameter name="InputMode" type="int" value="1"/>
  <!--Maximal number of track candidates.-->
  <parameter name="MaxTrackCandidates" type="int" value="100000"/>
  <parameter name="MaxTrackCandidatesTotal" type="int" value="100000"/>
  <!--Use only events with one hit in every plane.-->
  <parameter name="OnlySingleHitEvents" type="int" value="0"/>
  <!--Use only events with one track candidate.-->
  <parameter name="OnlySingleTrackEvents" type="int" value="0"/>
  <!-- parameter name="FixParameter" type="int" value="63 63 63     7 63 63   63  63 63"/ -->
  <!-- parameter name="FixParameter" type="int" value=" 28 28 28    4  4  4      28 28 28" /-->
  <!-- parameter name="FixParameter" type="int" value="63 28 28    28 28 28   28  28 28"/ -->
  <parameter name="FixParameter" type="int" value=" 0  0  0     0  0      0   0  0"/>
  <!-- parameter name="FixParameter" type="int" value="16 16 16    16 16 16   16  16 16"/ -->
  <!-- parameter name="FixParameter" type="int" value="60 60 60    60 60 60   60  60 60"/ -->
  <!-- parameter name="FixParameter" type="int" value="28 28 28    28 28 28   28  28 28"/ -->
  <!-- parameter name="FixParameter" type="int" value="56 56 56    56 56 56   56  56 56"/ -->
  <!--Start values for the alignment for the angle gamma.-->
  <!--parameter name="PedeUserStartValuesGamma" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for shifts in the X direction.-->
  <!--parameter name="PedeUserStartValuesX" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for shifts in the Y direction.-->
  <!--parameter name="PedeUserStartValuesY" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Resolution of the telescope for Millepede.-->
  <parameter name="TelescopeResolution" type="float" value="10"/>
  <parameter name="ResolutionX" type="float" value="    4      4      4       10    50         4      4      4 "/>
  <parameter name="ResolutionY" type="float" value="    4      4      4       10    10         4      4      4 "/>
  <parameter name="ResolutionZ" type="float" value=" 5000   5000   5000     5000  5000      5000   5000   5000 "/>
  <!--Rotation around the x axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorAlpha" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Rotation around the y axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorBeta" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Rotation around the z axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorGamma" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Resolution assumed for the sensors in test mode.-->
  <!--parameter name="TestModeSensorResolution" type="float" value="3"/-->
  <!--X shifts of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorXShifts" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Y shifts of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorYShifts" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Z positions of the sensors in test mode.-->
  <!--parameter name="TestModeSensorZPositions" type="FloatVec"> 20000 40000 60000 80000 100000 120000 </parameter-->
  <!--Width of the track slope distribution in the x direction-->
  <!--parameter name="TestModeXTrackSlope" type="float" value="0.0005"/-->
  <!--Width of the track slope distribution in the y direction-->
  <!--parameter name="TestModeYTrackSlope" type="float" value="0.0005"/-->
  <!--Give start values for pede by hand (0 - automatic calculation of start values, 1 - start values defined by user).-->
  <!--parameter name="UsePedeUserStartValues" type="int" value="0"/-->

</processor>
 <processor name="Save4" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@ResultsFolder@/@RunNumber@-align.slcio "/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!-- parameter name="SplitFileSizekB" type="int" value="1000000"/-->
</processor>


</marlin>
