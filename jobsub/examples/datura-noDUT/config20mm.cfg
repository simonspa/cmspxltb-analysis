#
# datura-noDUT config for jobsub
#
# see README for more information on this example
#

[DEFAULT]

# Global section. Settings can be overwritten through task-specific sections
# The python config parser interprets '%(NAME)s' as the corresponding variable NAME.
# The variable 'eutelescopepath' is by default filled with the environment variable EUTELESCOPE
# and should correspond to the installation path of EUTelescope.
# Also, the variable '%(home)s' corresponds to the user's home directory.
# The template file name can be set with TemplateFile = file.xml. The default is '[task]-tmp.xml'

BasePath     		= %(eutelescopepath)s/jobsub/examples/datura-noDUT
TemplatePath		= %(BasePath)s/steering-templates

# Set the folder which contains the raw/native data files
# You can find a data sample at /afs/desy.de/group/telescopes/EutelTestData/TestExampleDaturaNoDUT
NativePath		= /data/user/eicht/testbeam/telescope_150mm/native

# Geometry file
GearFile    		= gear_desy2012_20mm.xml

# Path to the geometry file
GeometryPath		= %(BasePath)s

# Output format; @RunNumber@ is the current run number padded with leading zeros to 6 digits
FilePrefix   	 	= run@RunNumber@	

# Which run number to use for hot pixel determination
HotpixelRunNumber	= @RunNumber@

# Histogram information
HistoInfoFile  		= %(TemplatePath)s/histoinfo.xml

# Limit processing of a run to a certain number of events
MaxRecordNumber		= 99999999

# Switch writing of ROOT histograms on or off
FillHistograms		= true

# Output subfolder structure
DatabasePath		= ./output/database
LcioPath		= ./output/lcio
HistogramPath		= ./output/histograms
LogPath			= ./output/logs

# The verbosity used by the eutelescope producers (i.e. MESSAGE, DEBUG, ERROR with appended level from 0..9, e.g. MESSAGE5).
# If you set this to DEBUG0 but you do not see any DEBUG messages, make sure that you set CMAKE_BUILD_TYPE to Debug in the 
# $EUTELESCOPE/CMakeList.txt file.
Verbosity		= MESSAGE
# Verbosity = DEBUG


# Section for the converter step
[converter]

# Hot Pixel detection
FiringFrequency		= 0.01


# Section for the clustering step
[clustering]

# Clustering alogrithm
ClusteringAlgorithm	= SparseCluster2


# Section for the hitmaker step
[hitmaker]

# Choose center of gravity algorithm (FULL, NPixel or NxMPixel), see documentation for information.
CenterOfGravity		= FULL

# Parameters for center of gravity algorithms:
NPixel			= 9
NxMPixel		= 3 3

# Number of events used for prealignment
PrealignEvents	   	= 100000


# Section for the alignment step
[align]

# The steering file for Millepede
PedeSteeringFile	= %(TemplatePath)s/pede-steer-tmp.txt

# Limit the number of track candidates
MaxTrackCandidates	= 200000

# Use only single hit events?
OnlySingleHitEvents	= 0

# Use only single track events?
OnlySingleTrackEvents	= 0

# Planes to exclude in alignment (not regarded at all)
ExcludePlanes		= 

# Planes to consider as fixed in alignment (these planes are included in the alignment but with fixed positions)
FixedPlanes		= 0 5

# Remove Mimosa26 clusters with a charge (i.e. number of fired pixels
# in cluster) below or equal to this value
ClusterSizeCut		= 1

# Residual Cuts
UseResidualCuts		= 1

# max residuals for each plane in [um]
ResidualX		= 100.
ResidualY		= 100.

# resolution of each plane in [um]
ResolutionX		= 5.
ResolutionY		= 5.
ResolutionZ		= 1000.

# Maximum distance in um for for matches used in EUTelMille/findTrack:
DistanceMax		=  2000


# Section for the fitter step
[fitter]

# Which alignment file?
AlignmentFile		= %(DatabasePath)s/run@RunNumber@-alignment.slcio

# TestFitter options:
AllowedSkipHits		= 0
SkipHitPenalty		= 100 
AllowedMissingHits	= 1
MissingHitPenalty	= 1
Chi2Max			= 100
DistanceMax		= 2000.0