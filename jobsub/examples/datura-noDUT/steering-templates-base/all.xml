<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->


<!--##########################################
    #                                        #
    #     Example steering file for          #
    #	  Version: $Id$                      #
    #                                        #
    ##########################################-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">
 <execute>
   <processor name="MyAIDAProcessor"/>
   <processor name="MyTestProcessor"/>  
   <processor name="MyEUTelOutputProcessor"/>  
 </execute>

 <global>
  <parameter name="LCIOInputFiles"> </parameter>
  <!-- limit the number of processed records (run+evt): -->  
  <parameter name="MaxRecordNumber" value="@MaxRecordNumber@" />  
  <parameter name="SkipNEvents" value="0" />  
  <parameter name="SupressCheck" value="false" />  
  <parameter name="GearXMLFile"> "@GearPath@/@GearFile@" </parameter>  
  <parameter name="Verbosity" options="DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT"> @VerbosityLevel@  </parameter> 
  <parameter name="RandomSeed" value="1234567890" />
 </global>

 <processor name="MyAIDAProcessor" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int">1 </parameter>
  <!-- filename without extension-->
  <parameter name="FileName" type="string">aida_file </parameter>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string">root </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

<processor name="MyEUTelApplyAlignmentProcessor" type="EUTelApplyAlignmentProcessor">
 <!--Apply to the input hit the alignment corrections-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject">dummy </parameter>
  <!--Rotation Angle around X axis-->
  <!--parameter name="Alpha" type="double">0 </parameter-->
  <!--Available directinos are: 0 -> direct  1 -> reverse -->
  <parameter name="ApplyAlignmentDirection" type="int">0 </parameter>
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <!--parameter name="ApplyToReferenceCollection" type="bool">false </parameter-->
  <!--Rotation Angle around Y axis-->
  <!--parameter name="Beta" type="double">0 </parameter-->
  <!--Available methods are: 0 -> shift only, 1 -> rotation first, 2 -> shift first -->
  <parameter name="CorrectionMethod" type="int">1 </parameter>
  <!--Enable or disable DEBUG mode -->
  <!--parameter name="DEBUG" type="bool">false </parameter-->
  <!--Implement geometry shifts and rotations as described in alignmentCollectionName -->
  <!--parameter name="DoAlignCollection" type="bool">false </parameter-->
  <!--Apply alignment steps in one go. Is supposed to be used for reversealignment in reverse order, like: undoAlignment, undoPreAlignment, undoGear -->
  <!--parameter name="DoAlignmentInOneGo" type="bool">false </parameter-->
  <!--Implement geometry shifts and rotations as described in GEAR steering file -->
  <!--parameter name="DoGear" type="bool">false </parameter-->
  <!--Rotation Angle around Z axis-->
  <!--parameter name="Gamma" type="double">0 </parameter-->
  <!--Enable or disable histograms-->
  <!--parameter name="HistogramSwitch" type="bool">false </parameter-->
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit">hit </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit">PreAlignedHit </parameter>
  <!--This is the name of the reference it collection (init at 0,0,0)-->
  <!--parameter name="OutputReferenceCollection" type="string">output_refhit </parameter-->
  <!--Events number to have DEBUG1 printed outs (default=10)-->
  <!--parameter name="PrintEvents" type="int">10 </parameter-->
  <!--This is the name of the reference it collection (init at 0,0,0)-->
  <!--parameter name="ReferenceCollection" type="string">reference </parameter-->
  <!--This is the name of the reference it collection (init at 0,0,0)-->
  <!--parameter name="ReferenceHitFile" type="string">reference.slcio </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--List of alignment collections that were applied to the DUT-->
  <parameter name="alignmentCollectionNames" type="StringVec">alignmentCollectionNames  </parameter>
  <!--List of hit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
  <parameter name="hitCollectionNames" type="StringVec">hitCollectionNames  </parameter>
  <!--List of refhit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
  <parameter name="refhitCollectionNames" type="StringVec">hitCollectionNames  </parameter>
</processor>

 <processor name="MyEUTelAutoPedestalNoiseProcessor" type="EUTelAutoPedestalNoiseProcessor">
 <!--EUTelAutoPedestalNoiseProcessor produces initial pedestal / noise / status with user provided values-->
  <!--The initial value of noise (one value for detector)-->
  <!--parameter name="InitNoiseValue" type="FloatVec">1 1 1 1 1 1  </parameter-->
  <!--The initial value of pedestal (one value for detector)-->
  <!--parameter name="InitPedestalValue" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--The maximum pixel along x (default 255, one value per detector)-->
  <!--parameter name="MaxXVector" type="IntVec">255 255 255 255 255 255  </parameter-->
  <!--The maximum pixel along y (default 255, one value per detector)-->
  <!--parameter name="MaxYVector" type="IntVec">255 255 255 255 255 255  </parameter-->
  <!--The minimum pixel along x (default 0, one value per detector)-->
  <!--parameter name="MinXVector" type="IntVec">0 0 0 0 0 0  </parameter-->
  <!--The minimum pixel along y (default 0, one value per detector)-->
  <!--parameter name="MinYVector" type="IntVec">0 0 0 0 0 0  </parameter-->
  <!--Noise local collection-->
  <parameter name="NoiseCollectionName" type="string" lcioOutType="TrackerData">noise </parameter>
  <!--Pedestal local collection-->
  <parameter name="PedestalCollectionName" type="string" lcioOutType="TrackerData">pedestal </parameter>
  <!--The sensorID for the generated collection (one per detector)-->
  <!--parameter name="SensorIDVec" type="IntVec">0 1 2 3 4 5  </parameter-->
  <!--Pixel status collection-->
  <parameter name="StatusCollectionName" type="string" lcioOutType="TrackerRawData">status </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>



 <processor name="MyEUTelClusterFilter" type="EUTelClusterFilter">
 <!--EUTelClusterFilter is a very powerful tool. It allows to select among an input collection of TrackerPulse
only the clusters fulfilling a certain set of selection criteria.
The user can modify the switch on and off each selection cut and set the proper value for that via the processor parameter.-->
  <!--This is the minimum allowed total charge in to a cluster.
One floating point number for each sensor in the telescope-->
  <parameter name="ClusterMinTotalCharge" type="FloatVec">90 75 80  </parameter>
  <!--This is the minimum charge that a cluster of N pixels has to have.
The first figure has to be the number of pixels to consider in the cluster, 
then one float number for each sensor.-->
  <parameter name="ClusterNMinCharge" type="FloatVec">9 90 75 80  </parameter>
  <!--This is the minimum SNR that a cluster of N pixels has to have.
The first figure has to be the number of pixels to consider in the cluster, 
then one float number for each sensor. Setting N = 0 is enough to disable the cut.-->
  <parameter name="ClusterNMinSNR" type="FloatVec">9 25 21 20  </parameter>
  <!--This is the minimum charge that a cluster of N times N pixels has to have.
The first figure is the subcluster size in pixels (odd number), then one floating number for each 
planes. To switch this selection off, set all numbers to zero.-->
  <parameter name="ClusterNxNMinCharge" type="FloatVec">3 0 0 0  </parameter>
  <!--This is the minimum SNR that a cluster of N times N pixels has to have.
The first figure is the subcluster size in pixels (odd number), then one floating number for each 
planes. To switch this selection off, set at least the first number to zero.-->
  <parameter name="ClusterNxNMinSNR" type="FloatVec">3 0 0 0  </parameter>
  <!--This is the required quality for the cluster.
One integer number for each detector according to ClusterQuality.
Put a negative number to disable the cut-->
  <parameter name="ClusterQuality" type="IntVec">0 0 0  </parameter>
  <!--This is a cut on the number of hit pixels inside the digital fixed frame
cluster algorithm. One cut for each sensor plane.
-->
  <parameter name="DFFNumberOfHits" type="IntVec">0 0 0 0 0 0 0 0 0  </parameter>
  <!--This is the input Tracker Pulse collection that should be filtered-->
  <parameter name="InputPulseCollectionName" type="string" lcioInType="TrackerPulse">cluster </parameter>
  <!--Define here ROI's. The first number (integer) is the detector ID.
The other four float are xBotLeft  yBotLeft xTopRight yTopRight.
To disable it, just put a negative number as detector ID.-->
  <parameter name="InsideRegion" type="FloatVec">-1 10 10 40 40  </parameter>
  <!--This is maximum allowed cluster noise.
One floating number for each detector. Write a negative number to disable the cut-->
  <parameter name="MaxClusterNoise" type="FloatVec">50 45 48  </parameter>
  <!--This is the maximum allowed number of cluster per plane.
 One integer number for each detector. Write a negative number to disable the cut-->
  <parameter name="MaxClusterPerPlane" type="IntVec">-1 -1 -1  </parameter>
  <!--This is the minimum required number of cluster per plane.
One integer number for each detector. Write 0 to disable the cut-->
  <parameter name="MinClusterPerPlane" type="IntVec">0 0 0  </parameter>
  <!--This is the minimum allow total cluster SNR
One floating number for each detector. Write 0 to disable the cut-->
  <parameter name="MinTotalClusterSNR" type="FloatVec">10 12 11  </parameter>
  <!--This is the name of the noise collection.
The presence of this collection in the event is allowing all the noise based selection cuts-->
  <parameter name="NoiseCollectionName" type="string" lcioInType="TrackerData">noiseDB </parameter>
  <!--This is the output Tracker Pulse collection containing the filtered clusters-->
  <parameter name="OutputPulseCollectionName" type="string" lcioOutType="TrackerPulse">filteredcluster </parameter>
  <!--Define here ROI's. The first number (integer) is the detector ID.
The other four float are xBotLeft  yBotLeft xTopRight yTopRight.
To disable it, just put a negative number as detector ID.-->
  <parameter name="OutsideRegion" type="FloatVec">-1 10 10 40 40  </parameter>
  <!--Setting this to true will select only events having the same number 
of hits for each plane.-->
  <parameter name="SameNumberOfHits" type="bool">false </parameter>
  <!--This is the minimum allowed charge that the seed pixel of a cluster has to have.
One floating number for each detector-->
  <parameter name="SeedMinCharge" type="FloatVec">20 25 21  </parameter>
  <!--This is the minimum allowed SNR that the seed pixel of a cluster has to have.
One floating number for each detector. Set to 0 to disable-->
  <parameter name="SeedMinSNR" type="FloatVec">10 12 14  </parameter>
  <!--If true, a SkipEventException is thrown if after selection
there are no cluster left.-->
  <!--parameter name="SkipEmptyEvent" type="bool">false </parameter-->
  <!--This is the name of the status collection.
The presence of this collection in the event is allowing all the noise based selection cuts-->
  <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData">statusDB </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>


 <processor name="MyEUTelClusteringProcessor" type="EUTelClusteringProcessor">
 <!--EUTelClusteringProcessor is looking for clusters into a calibrated pixel matrix.-->
  <!--The list of cluster N to be filled.For example 7 means filling the cluster spectra with the 7 most significant pixels-->
  <!--parameter name="ClusterN" type="IntVec">4 9 14 19 25  </parameter-->
  <!--The list of cluster NxN to be filled.For example 3 means filling the 3x3 histogram spectrum-->
  <!--parameter name="ClusterNxN" type="IntVec">3 5  </parameter-->
  <!--Select here which algorithm should be used for clustering.
Available algorithms are:
-> FixedFrame: for custer with a given size
-> BrickedCluster: for bricked clustering on raw data-->
  <parameter name="ClusteringAlgo" type="string">FixedFrame </parameter>
  <!--Select herewith the type of the data format you are expecting from the sensors.
Available types of the data format:
-> Analog: smooth distribution of pixel ADC values from Min to Max
-> Digital: descrete distribution of pixel ADC values from Min to Max
-> Binary: only two values of the signal - 0 and 1-->
  <parameter name="DataFormatType" type="string">Binary </parameter>
  <!--The list of sensor ids that have to be excluded from the clustering.-->
  <!--parameter name="ExcludedPlanes" type="IntVec"> </parameter-->
  <!--Threshold in SNR for cluster identification-->
  <parameter name="FFClusterCut" type="float">3 </parameter>
  <!--Maximum allowed cluster size along x (only odd numbers)-->
  <parameter name="FFClusterSizeX" type="int">5 </parameter>
  <!--Maximum allowed cluster size along y (only odd numbers)-->
  <parameter name="FFClusterSizeY" type="int">5 </parameter>
  <!--Threshold in SNR for seed pixel identification-->
  <parameter name="FFSeedCut" type="float">4.5 </parameter>
  <!--This is the name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string">histoinfo.xml </parameter>
  <!--Switch on or off the histogram filling-->
  <parameter name="HistogramFilling" type="bool">true </parameter>
  <!--This is the name of the hotpixel collection-->
  <!--parameter name="HotPixelCollectionName" type="string">hotpixel_m26 </parameter-->
  <!--Input calibrated data not zero suppressed collection name-->
  <parameter name="NZSDataCollectionName" type="string" lcioInType="TrackerData">data </parameter>
  <!--Noise (input) collection name-->
  <parameter name="NoiseCollectionName" type="string" lcioInType="TrackerData">noise </parameter>
  <!--Cluster (output) collection name-->
  <parameter name="PulseCollectionName" type="string" lcioOutType="TrackerPulse">cluster </parameter>
  <!--Threshold in SNR for clusters contained in ZS data-->
  <parameter name="SparseClusterCut" type="float">3 </parameter>
  <!--Minimum distance between sparsified pixel ( touching == sqrt(2)) -->
  <parameter name="SparseMinDistance" type="float">0 </parameter>
  <!--Threshold in SNR for seed pixel contained in ZS data-->
  <parameter name="SparseSeedCut" type="float">4.5 </parameter>
  <!--Pixel status (input) collection name-->
  <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData">status </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--Select here which algorithm should be used for clustering.
Available algorithms are:
-> SparseCluster: for cluster in ZS frame
-> SparseCluster2: for cluster in ZS frame with better performance
-> FixedFrame: for cluster with a given size
-> DFixedFrame: for digital cluster with a given size
-> BrickedCluster: for bricked clustering on zs data
-->
  <parameter name="ZSClusteringAlgo" type="string">SparseCluster </parameter>
  <!--Input of Zero Suppressed data-->
  <parameter name="ZSDataCollectionName" type="string" lcioInType="TrackerData">zsdata </parameter>
</processor>


 <processor name="MyEUTelCorrelator" type="EUTelCorrelator">
 <!--EUTelCorrelator fills histograms with correlation plots-->
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <!--parameter name="ApplyToReferenceCollection" type="bool">false </parameter-->
  <!--Minimum allowed cluster charge to be taken into account for the correlation plots (default = 2)-->
  <parameter name="ClusterChargeMinimum" type="int">2 </parameter>
  <!--Dump the offset X and Y values calculated from the correlation bands (default = true)-->
  <parameter name="DumpOffset" type="bool">true </parameter>
  <!--How many events are needed to get reasonable correlation plots (and Offset DB)? (default=1000)-->
  <parameter name="Events" type="int">1000 </parameter>
  <!--SensorID of fixed plane-->
  <!--parameter name="FixedPlane" type="int">0 </parameter-->
  <!--This is the name of the hot pixel collection to be saved into the output slcio file-->
  <!--parameter name="HotPixelCollectionName" type="string">hotpixel </parameter-->
  <!--List of cluster collections-->
  <parameter name="InputClusterCollections" type="StringVec" lcioInType="TrackerPulse"> </parameter>
  <!--Hit collection name-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit">hit </parameter>
  <!--If there are more then this number of correlated hits (planes->track candidate) (default=5)-->
  <!--parameter name="MinNumberOfCorrelatedHits" type="int">5 </parameter-->
  <!--This is the name of the LCIO file name with the output offset db (add .slcio)-->
  <!--parameter name="OffsetDBFile" type="string">offset-db.slcio </parameter-->
  <!--reference hit collection name -->
  <!--parameter name="ReferenceCollection" type="string">reference </parameter-->
  <!--Maximal values of the hit residuals in the X direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsXMax" type="FloatVec">10 10 10 10 10 10  </parameter-->
  <!--Minimal values of the hit residuals in the X direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsXMin" type="FloatVec">-10 -10 -10 -10 -10 -10  </parameter-->
  <!--Maximal values of the hit residuals in the Y direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsYMax" type="FloatVec">10 10 10 10 10 10  </parameter-->
  <!--Minimal values of the hit residuals in the Y direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsYMin" type="FloatVec">-10 -10 -10 -10 -10 -10  </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>-->

 <processor name="MyEUTelDUTHistograms" type="EUTelDUTHistograms">
 <!--Analysis of DUT performance based on the analytic track fit results-->
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <!--parameter name="ApplyToReferenceCollection" type="bool">false </parameter-->
  <!--Alignment corrections for DUT: shift (in mm) in X, Y and rotation around Z-->
  <parameter name="DUTalignment" type="FloatVec">0 0 0  </parameter>
  <!--DUT sensor pitch in X-->
  <parameter name="DUTpitchX" type="double">0.0184 </parameter>
  <!--DUT sensor pitch in Y-->
  <parameter name="DUTpitchY" type="double">0.0184 </parameter>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int">100 </parameter>
  <!--Maximum allowed distance between fit and matched DUT hit-->
  <parameter name="DistMax" type="double">0.1 </parameter>
  <!--Name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string">histoinfo.xml </parameter>
  <!--Name of the input DUT hit collection-->
  <parameter name="InputFitHitCollectionName" type="string" lcioInType="TrackerHit">dummy </parameter>
  <!--Name of the input DUT hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit">hit </parameter>
  <!--Name of the input DUT hit collection-->
  <parameter name="InputRecHitCollectionName" type="string" lcioInType="TrackerHit">localHit </parameter>
  <!--Name of the input Track collection-->
  <parameter name="InputTrackCollectionName" type="string" lcioInType="Track">testfittracks </parameter>
  <!--Id of telescope layer which should be used as DUT-->
  <parameter name="ManualDUTid" type="int">0 </parameter>
  <!--reference hit collection name -->
  <!--parameter name="ReferenceCollection" type="string">reference </parameter-->
  <!--Flag for manual DUT selection-->
  <parameter name="UseManualDUT" type="bool">false </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--cluster size X cut -->
  <!--parameter name="cluSizeXCut" type="int">-1 </parameter-->
  <!--cluster size Y cut -->
  <!--parameter name="cluSizeYCut" type="int">-1 </parameter-->
  <!--number of hit on a track with _cluSizeX cluster size -->
  <!--parameter name="trackNCluXCut" type="int">0 </parameter-->
  <!--number of hit on a track with _cluSizeY cluster size -->
  <!--parameter name="trackNCluYCut" type="int">0 </parameter-->
</processor>

 <processor name="MyEUTelFitTuple" type="EUTelFitTuple">
 <!--Prepare n-tuple with track fit results-->
  <!--Alignment corrections for DUT: shift in X, Y and rotation around Z-->
  <parameter name="DUTalignment" type="FloatVec">0 0 0  </parameter>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int">100 </parameter>
  <!--Maximum allowed distance between fit and matched DUT hit-->
  <parameter name="DistMax" type="double">0.1 </parameter>
  <!--Name of the input Track collection-->
  <parameter name="InputCollectionName" type="string" lcioInType="Track">testfittracks </parameter>
  <!--Name of the input DUT hit collection-->
  <parameter name="InputDUTCollectionName" type="string" lcioInType="TrackerHit">hit </parameter>
  <!--Id of telescope layer which should be used as DUT-->
  <parameter name="ManualDUTid" type="int">0 </parameter>
  <!--Value used for missing measurements-->
  <parameter name="MissingValue" type="double">-100 </parameter>
  <!--Flag for manual DUT selection-->
  <parameter name="UseManualDUT" type="bool">false </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

 <processor name="MyEUTelHistogramMaker" type="EUTelHistogramMaker">
 <!--EUTelHistogramMaker fills reference and control histograms-->
  <!--The list of cluster N to be filled.For example 7 means filling the cluster spectra with the 7 most significant pixels-->
  <!--parameter name="ClusterN" type="IntVec">4 9 14 19 25  </parameter-->
  <!--The list of cluster NxN to be filled.For example 3 means filling the 3x3 histogram spectrum-->
  <!--parameter name="ClusterNxN" type="IntVec">3 5  </parameter-->
  <!--This is the name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string">histoinfo.xml </parameter>
  <!--The name of the noise collections-->
  <parameter name="NoiseCollectionName" type="StringVec" lcioInType="TrackerData">noise  </parameter>
  <!--Input tracker pulse collection-->
  <parameter name="PulseCollectionName" type="string" lcioInType="TrackerPulse">pulse </parameter>
  <!--The name of the status collections.-->
  <parameter name="StatusCollectionName" type="StringVec" lcioInType="TrackerRawData">status  </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

 <processor name="MyEUTelHitMaker" type="EUTelHitMaker">
 <!--EUTelHitMaker is responsible to translate cluster centers from the local frame of reference to the external frame of reference using the GEAR geometry description-->
  <!--Select here how the center of gravity should be calculated.
FULL: using the full cluster
NPixel: using only the first N most significant pixels (set NPixel too)
NxMPixel: using a subframe of the cluster N x M pixels wide (set NxMPixel too).-->
  <parameter name="CoGAlgorithm" type="string">NxMPixel </parameter>
  <!--If true a 3D histo will be filled. It may require large memory-->
  <!--parameter name="Enable3DHisto" type="bool">true </parameter-->
  <!--The name of the collections containing the eta function (x and y respectively)-->
  <!--parameter name="EtaCollectionName" type="StringVec">xEta yEta  </parameter-->
  <!--Enable or disable eta correction-->
  <!--parameter name="EtaSwitch" type="bool">true </parameter-->
  <!--Hit collection name-->
  <parameter name="HitCollectionName" type="string" lcioOutType="TrackerHit"> </parameter>
  <!--The number of most significant pixels to be used if CoGAlgorithm is "NPixel"-->
  <!--parameter name="NPixel" type="int">9 </parameter-->
  <!--The submatrix size to be used for CoGAlgorithm = "NxMPixel"-->
  <!--parameter name="NxMPixel" type="IntVec">3 3  </parameter-->
  <!--This is the name of the preAligment collection stored in the offset-db.slcio file-->
  <!--parameter name="OffsetCollection" type="string">preAlignment </parameter-->
  <!--This is the name of the LCIO file name with the output offset db (add .slcio)-->
  <!--parameter name="OffsetDBFile" type="string">offset-db.slcio </parameter-->
  <!--Cluster (pulse) collection name-->
  <parameter name="PulseCollectionName" type="string" lcioInType="TrackerPulse"> </parameter>
  <!--This is the name of the reference it collection (init at 0,0,0)-->
  <!--parameter name="ReferenceCollection" type="string">reference </parameter-->
  <!--This is the name of the reference it collection (init at 0,0,0)-->
  <!--parameter name="ReferenceHitFile" type="string">reference.slcio </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

 <processor name="MyEUTelHotPixelKiller" type="EUTelHotPixelKiller">
 <!--EUTelHotPixelKiller periodically check for pixel singing loud too often and remove them from the analysis-->
  <!--This flag is used to initialise simple data decoding and hot pixel finder (0-no, 1-yes)-->
  <parameter name="BuildHotPixelDatabase" type="int">0 </parameter>
  <!--The list of sensor ids that have to be excluded from the clustering.-->
  <!--parameter name="ExcludedPlanes" type="IntVec"> </parameter-->
  <!--This is the name of the hot pixel collection to be saved into the output slcio file-->
  <!--parameter name="HotPixelCollectionName" type="string">hotpixel </parameter-->
  <!--This is the name of the LCIO file name with the output hotpixel db (add .slcio)-->
  <!--parameter name="HotPixelDBFile" type="string">hotpixel.slcio </parameter-->
  <!--Write mode for HotPixelDB file:  WRITE_APPEND or WRITE_NEW-->
  <!--parameter name="LCIOWriteMode" type="string">WRITE_APPEND </parameter-->
  <!--This float number [0,1] represents the maximum allowed firing frequency
within the selected number of event per cycle-->
  <parameter name="MaxAllowedFiringFreq" type="float">0.2 </parameter>
  <!--The number of events to be considered for each update cycle-->
  <parameter name="NoOfEventPerCycle" type="int">100 </parameter>
  <!--Noise (input) collection name-->
  <parameter name="NoiseCollectionName" type="string" lcioInType="TrackerData">noise </parameter>
  <!--Pixel status (input) collection name-->
  <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData">status </parameter>
  <!--The total number of hot pixel cycle-->
  <parameter name="TotalNoOfCycle" type="int">10 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--Input of Zero Suppressed data-->
  <parameter name="ZSDataCollectionName" type="string" lcioInType="TrackerData">zsdata </parameter>
</processor>



 <processor name="MyEUTelMille" type="EUTelMille">
 <!--EUTelMille uses the MILLE program to write data files for MILLEPEDE II.-->
  <!--Number of alignment constants used. Available mode are: 
1 - shifts in the X and Y directions and a rotation around the Z axis,
2 - only shifts in the X and Y directions
3 - (EXPERIMENTAL) shifts in the X,Y and Z directions and rotations around all three axis-->
  <!--parameter name="AlignMode" type="int">1 </parameter-->
  <!--This is the name of the alignment collection to be saved into the slcio file-->
  <!--parameter name="AlignmentConstantCollectionName" type="string">alignment </parameter-->
  <!--This is the name of the LCIO file name with the output alignmentconstants (add .slcio)-->
  <!--parameter name="AlignmentConstantLCIOFile" type="string">alignment.slcio </parameter-->
  <!--Set how many hits (=planes) can be missing on a track candidate.-->
  <!--parameter name="AllowedMissingHits" type="int">0 </parameter-->
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection?-->
  <!--parameter name="ApplyToReferenceCollection" type="bool">false </parameter-->
  <!--Name of the Millepede binary file.-->
  <!--parameter name="BinaryFilename" type="string">mille.bin </parameter-->
  <!--Maximal allowed distance between hits entering the fit per 10 cm space between the planes.-->
  <!--parameter name="DistanceMax" type="float">2000 </parameter-->
  <!--Maximal allowed distance between hits entering the fit per 10 cm space between the planes. One value for each neighbor planes. DistanceMax will be used for each pair if this vector is empty.-->
  <!--parameter name="DistanceMaxVec" type="FloatVec"> </parameter-->
  <!--Exclude planes from fit according to their sensor ids.-->
  <!--parameter name="ExcludePlanes" type="IntVec"> </parameter-->
  <!--Fixes the given alignment parameters in the fit if alignMode==3 is used. For each sensor an integer must be specified (If no value is given, then all parameters will be free). bit 0 = x shift, bit 1 = y shift, bit 2 = z shift, bit 3 = alpha, bit 4 = beta, bit 5 = gamma. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="FixParameter" type="IntVec">24 24 24 24 24 24  </parameter-->
  <!--Fix sensor planes in the fit according to their sensor ids.-->
  <!--parameter name="FixedPlanes" type="IntVec"> </parameter-->
  <!--Generate a steering file for the pede program.-->
  <!--parameter name="GeneratePedeSteerfile" type="int">0 </parameter-->
  <!--Hit collections name-->
  <parameter name="HitCollectionName" type="StringVec" lcioInType="TrackerHit">corrhits  </parameter>
  <!--This is the name of the hot pixel collection to be saved into the output slcio file-->
  <!--parameter name="HotPixelCollectionName" type="string"> </parameter-->
  <!--Selects the source of input hits.
0 - hits read from hitfile with simple trackfinding. 
1 - hits read from output of tracking processor. 
2 - Test mode. Simple internal simulation and simple trackfinding. 
3 - Mixture of a track collection from the telescope and hit collections for the DUT (only one DUT layer can be used unfortunately)-->
  <!--parameter name="InputMode" type="int">0 </parameter-->
  <!--Maximal number of track candidates.-->
  <!--parameter name="MaxTrackCandidates" type="int">2000 </parameter-->
  <!--Maximal number of track candidates (Total).-->
  <!--parameter name="MaxTrackCandidatesTotal" type="int">10000000 </parameter-->
  <!--Remove Mimosa26 clusters with a charge (i.e. number of fired pixels in cluster) below or equal to this value-->
  <!--parameter name="MimosaClusterChargeMin" type="int">1 </parameter-->
  <!--Use only events with one hit in every plane.-->
  <!--parameter name="OnlySingleHitEvents" type="int">0 </parameter-->
  <!--Use only events with one track candidate.-->
  <!--parameter name="OnlySingleTrackEvents" type="int">0 </parameter-->
  <!--Name of the steering file for the pede program.-->
  <!--parameter name="PedeSteerfileName" type="string">steer_mille.txt </parameter-->
  <!--Start values for the alignment for the angle alpha.-->
  <!--parameter name="PedeUserStartValuesAlpha" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Start values for the alignment for the angle beta.-->
  <!--parameter name="PedeUserStartValuesBeta" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Start values for the alignment for the angle gamma.-->
  <!--parameter name="PedeUserStartValuesGamma" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Start values for the alignment for shifts in the X direction.-->
  <!--parameter name="PedeUserStartValuesX" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Start values for the alignment for shifts in the Y direction.-->
  <!--parameter name="PedeUserStartValuesY" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Start values for the alignment for shifts in the Z direction.-->
  <!--parameter name="PedeUserStartValuesZ" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--reference hit collection name -->
  <!--parameter name="ReferenceCollection" type="string">reference </parameter-->
  <!--Maximal values of the hit residuals in the X direction for a track. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsXMax" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Minimal values of the hit residuals in the X direction for a track. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsXMin" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Maximal values of the hit residuals in the Y direction for a track. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsYMax" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Minimal values of the hit residuals in the Y direction for a track. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsYMin" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--X resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResolutionX" type="FloatVec">10 10 10 10 10 10  </parameter-->
  <!--Y resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResolutionY" type="FloatVec">10 10 10 10 10 10  </parameter-->
  <!--Z resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResolutionZ" type="FloatVec">10 10 10 10 10 10  </parameter-->
  <!--Execute the pede program using the generated steering file.-->
  <!--parameter name="RunPede" type="int">0 < <processor name="MyEUTelHitMaker" type="EUTelHitMaker">
 <!--EUTelHitMaker is responsible to translate cluster centers from the local frame of reference to the external frame of reference using the GEAR geometry description-->
  <!--Select here how the center of gravity should be calculated.
FULL: using the full cluster
/parameter-->
  <!--Resolution of the telescope for Millepede (sigma_x=sigma_y.-->
  <!--parameter name="TelescopeResolution" type="float">3 </parameter-->
  <!--Rotation around the x axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorAlpha" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Rotation around the y axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorBeta" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Rotation around the z axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorGamma" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Resolution assumed for the sensors in test mode.-->
  <!--parameter name="TestModeSensorResolution" type="float">3 </parameter-->
  <!--X shifts of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorXShifts" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Y shifts of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorYShifts" type="FloatVec">0 0 0 0 0 0  </parameter-->
  <!--Z positions of the sensors in test mode.-->
  <!--parameter name="TestModeSensorZPositions" type="FloatVec">20000 40000 60000 80000 100000 120000  </parameter-->
  <!--Width of the track slope distribution in the x direction-->
  <!--parameter name="TestModeXTrackSlope" type="float">0.0005 </parameter-->
  <!--Width of the track slope distribution in the y direction-->
  <!--parameter name="TestModeYTrackSlope" type="float">0.0005 </parameter-->
  <!--Track collection name-->
  <parameter name="TrackCollectionName" type="string" lcioInType="Track">fittracks </parameter>
  <!--Give start values for pede by hand (0 - automatic calculation of start values, 1 - start values defined by user).-->
  <!--parameter name="UsePedeUserStartValues" type="int">0 </parameter-->
  <!--Use cuts on the residuals to reduce the combinatorial background. 0 for off, 1 for on-->
  <!--parameter name="UseResidualCuts" type="int">0 </parameter-->
  <!--Do not use all pixels for alignment, only these in the rectangular (A|B) e.g. (0,0) and (C|D) e.g. (100|100) of sensor S. Type in the way S1 A1 B1 C1 D1 S2 A2 B2 C2 D2 ...-->
  <!--parameter name="UseSensorRectangular" type="IntVec"> </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>


 <processor name="MyEUTelNativeReader" type="EUTelNativeReader">
 <!--Reads data streams produced by EUDAQ and produced the corresponding LCIO output-->
  <!--This is the depfet produced output collection-->
  <parameter name="DEPFETOutputCollection" type="string" lcioOutType="TrackerData">rawdata_dep </parameter>
  <!--This is the eudrb producer output collection when read in RAW mode-->
  <parameter name="EUBRDRawModeOutputCollection" type="string" lcioOutType="TrackerRawData">rawdata </parameter>
  <!--Type of sparsified pixel data structure (use SparsePixelType enumerator)-->
  <!--parameter name="EUDRBSparsePixelType" type="int">1 </parameter-->
  <!--This si the mimotel output collection when read in ZS mode-->
  <parameter name="EUDRBZSModeOutputCollection" type="string" lcioOutType="TrackerData">zsdata </parameter>
  <!--The geometry identification number-->
  <parameter name="GeoID" type="int">0 </parameter>
  <!--This is the input file name-->
  <parameter name="InputFileName" type="string">run012345.raw </parameter>
  <!--Resynchronize the events based on the TLU trigger ID-->
  <parameter name="SyncTriggerID" type="bool">false </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

 <processor name="MyEUTelOutputProcessor" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <!--parameter name="DropCollectionNames" type="StringVec">TPCHits HCalHits  </parameter-->
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec">SimTrackerHit SimCalorimeterHit  </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec">MCParticlesSkimmed  </parameter-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec">MyPreciousSimTrackerHits  </parameter-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string">outputfile.slcio </parameter>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string">None </parameter>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool">true </parameter>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int">1992294 </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>


 <processor name="MyEUTelPreAlign" type="EUTelPreAlign">
 <!--Apply alignment constants to hit collection-->
  <!--Name of LCIO db file where alignment constantds will be stored-->
  <!--parameter name="AlignmentConstantLCIOFile" type="string">alignment.slcio </parameter-->
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <!--parameter name="ApplyToReferenceCollection" type="bool">false </parameter-->
  <!--How many events should be used for an approximation to the X,Y shifts (pre-alignment)? (default=50000)-->
  <parameter name="Events" type="int">50000 </parameter>
  <!--SensorID of fixed plane-->
  <!--parameter name="FixedPlane" type="int">0 </parameter-->
  <!--Switch on or off the histogram filling-->
  <!--parameter name="HistogramFilling" type="bool">true </parameter-->
  <!--This is the name of the hot pixel collection to be saved into the output slcio file-->
  <!--parameter name="HotPixelCollectionName" type="string">hotpixel_apix </parameter-->
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit">hit </parameter>
  <!--If there are more then this number of correlated hits (planes->track candidate) (default=5)-->
  <!--parameter name="MinNumberOfCorrelatedHits" type="int">5 </parameter-->
  <!--reference hit collection name -->
  <!--parameter name="ReferenceCollection" type="string">reference </parameter-->
  <!--Maximal values of the hit residuals in the X direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsXMax" type="FloatVec">10 10 10 10 10 10  </parameter-->
  <!--Minimal values of the hit residuals in the X direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsXMin" type="FloatVec">-10 -10 -10 -10 -10 -10  </parameter-->
  <!--Maximal values of the hit residuals in the Y direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsYMax" type="FloatVec">10 10 10 10 10 10  </parameter-->
  <!--Minimal values of the hit residuals in the Y direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsYMin" type="FloatVec">-10 -10 -10 -10 -10 -10  </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

 <processor name="MyEUTelTestFitter" type="EUTelTestFitter">
 <!--Analytical track fitting processor for EUDET telescope-->
  <!--Ids of layers for which alignment corrections are given-->
  <!--parameter name="AlignLayerIDs" type="IntVec"> </parameter-->
  <!--Rotation around Z for layer alignment-->
  <!--parameter name="AlignLayerRotZ" type="FloatVec"> </parameter-->
  <!--Alignment corrections in X for these layers-->
  <!--parameter name="AlignLayerShiftX" type="FloatVec"> </parameter-->
  <!--Alignment corrections in Y for these layers-->
  <!--parameter name="AlignLayerShiftY" type="FloatVec"> </parameter-->
  <!--Allow same hit to be used in more than one track-->
  <!--parameter name="AllowAmbiguousHits" type="bool">false </parameter-->
  <!--Allowed number of missing hits in the track-->
  <parameter name="AllowMissingHits" type="int">0 </parameter>
  <!--Allowed number of hits removed from the track-->
  <parameter name="AllowSkipHits" type="int">0 </parameter>
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <!--parameter name="ApplyToReferenceCollection" type="bool">false </parameter-->
  <!--Beam direction tilt in X-Z plane [rad] (for beam constraint)-->
  <!--parameter name="BeamSlopeX" type="double">0 </parameter-->
  <!--Beam direction tilt in Y-Z plane [rad] (for beam constraint)-->
  <!--parameter name="BeamSlopeY" type="double">0 </parameter-->
  <!--Assumed angular spread of the beam [rad] (for beam constraint)-->
  <!--parameter name="BeamSpread" type="double">0 </parameter-->
  <!--Maximum Chi2 for accepted track fit-->
  <parameter name="Chi2Max" type="double">100 </parameter>
  <!--Minimum Chi2 for accepted track fit-->
  <parameter name="Chi2Min" type="double">0 </parameter>
  <!--Collection name for corrected particle positions-->
  <parameter name="CorrectedHitCollectionName" type="string" lcioOutType="TrackerHit">corrfithits </parameter>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int">10 </parameter>
  <!--Beam energy [GeV]-->
  <parameter name="Ebeam" type="double">6 </parameter>
  <!--Name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string">histoinfo.xml </parameter>
  <!--Name of the input TrackerHit collection-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerHit">meshit </parameter>
  <!--Flag for storing input (measured) hits in track-->
  <parameter name="InputHitsInTrack" type="bool">false </parameter>
  <!--Ids of layers for which position masks are applied-->
  <!--parameter name="MaskLayerIDs" type="IntVec"> </parameter-->
  <!--Upper mask edge in X-->
  <!--parameter name="MaskMaxX" type="FloatVec"> </parameter-->
  <!--Upper mask edge in Y-->
  <!--parameter name="MaskMaxY" type="FloatVec"> </parameter-->
  <!--Lower mask edge in X-->
  <!--parameter name="MaskMinX" type="FloatVec"> </parameter-->
  <!--Lower mask edge in Y-->
  <!--parameter name="MaskMinY" type="FloatVec"> </parameter-->
  <!--Maximum number of considered hits per plane-->
  <parameter name="MaxPlaneHits" type="int">100 </parameter>
  <!--Maximum number of hits to be shared by more than one track-->
  <!--parameter name="MaximumAmbiguousHits" type="int">2 </parameter-->
  <!--Chi2 penalty for missing hit in the track-->
  <parameter name="MissingHitPenalty" type="double">0 </parameter>
  <!--Collection name for fitted particle hits (positions)-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit">testfithits </parameter>
  <!--Flag for storing output (fitted) hits in track-->
  <parameter name="OutputHitsInTrack" type="bool">true </parameter>
  <!--Collection name for fitted tracks-->
  <parameter name="OutputTrackCollectionName" type="string" lcioOutType="Track">testfittracks </parameter>
  <!--Ids of layers which should be treated as passive in the fit-->
  <!--parameter name="PassiveLayerIDs" type="IntVec"> </parameter-->
  <!--reference hit collection name -->
  <!--parameter name="ReferenceCollection" type="string">reference </parameter-->
  <!--X resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResolutionX" type="FloatVec">10 10 10 10 10 10  </parameter-->
  <!--Y resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResolutionY" type="FloatVec">10 10 10 10 10 10  </parameter-->
  <!--Z resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResolutionZ" type="FloatVec">10 10 10 10 10 10  </parameter-->
  <!--Flag for searching multiple tracks in events with multiple hits-->
  <!--parameter name="SearchMultipleTracks" type="bool">true </parameter-->
  <!--Chi2 penalty for removing hit from the track-->
  <parameter name="SkipHitPenalty" type="double">100 </parameter>
  <!--Ids of layers which should NOT be included in the fit-->
  <!--parameter name="SkipLayerIDs" type="IntVec"> </parameter-->
  <!--Maximum hit distance from the expected position, used for hit preselection-->
  <!--parameter name="SlopeDistanceMax" type="float">1 </parameter-->
  <!--Limit on track slope change when passing sensor layer (in X direction)-->
  <!--parameter name="SlopeXLimit" type="float">0.001 </parameter-->
  <!--Limit on track slope change when passing sensor layer (in Y direction)-->
  <!--parameter name="SlopeYLimit" type="float">0.001 </parameter-->
  <!--Flag for using beam direction constraint in the fit-->
  <!--parameter name="UseBeamConstraint" type="bool">false </parameter-->
  <!--Flag for including DUT measurement in the fit-->
  <parameter name="UseDUT" type="bool">false </parameter>
  <!--Flag for using nominal resolution instead of position errors-->
  <parameter name="UseNominalResolution" type="bool">true </parameter>
  <!--Use expected track direction to constraint number of considered hit combinations (track preselection).-->
  <!--parameter name="UseSlope" type="bool">true </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--Ids of layers for which position window cut are applied-->
  <!--parameter name="WindowLayerIDs" type="IntVec"> </parameter-->
  <!--Upper window edge in X-->
  <!--parameter name="WindowMaxX" type="FloatVec"> </parameter-->
  <!--Upper window edge in Y-->
  <!--parameter name="WindowMaxY" type="FloatVec"> </parameter-->
  <!--Lower window edge in X-->
  <!--parameter name="WindowMinX" type="FloatVec"> </parameter-->
  <!--Lower window edge in Y-->
  <!--parameter name="WindowMinY" type="FloatVec"> </parameter-->
  <!--List of alignment collections which are neede to get track position on a Sensor surface -->
  <parameter name="alignmentCollectionNames" type="StringVec">alignment  </parameter>
</processor>



 <processor name="MyLCIOOutputProcessor" type="LCIOOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <!--parameter name="DropCollectionNames" type="StringVec">TPCHits HCalHits  </parameter-->
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec">SimTrackerHit SimCalorimeterHit  </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec">MCParticlesSkimmed  </parameter-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec">MyPreciousSimTrackerHits  </parameter-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string">outputfile.slcio </parameter>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string">None </parameter>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int">1992294 </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>



 <processor name="MyPrintEventNumberProcessor" type="PrintEventNumberProcessor">
 <!--PrintEventNumberProcessor prints event number to screen depending on the verbosity level-->
  <!--Print event number every n Events (default 100)-->
  <parameter name="EveryNEvents" type="int">100 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

 <processor name="MyROOTProcessor" type="ROOTProcessor">
 <!--Processor that handles ROOT files. Creates one directory per processor.  Within process you can create all TObjects you wish and you only need to use ROOTProcessor::addTObject() to have it save Needs to be the first ActiveProcessor-->
  <!--The output ROOT file name-->
  <parameter name="FileName" type="string">file.root </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>


 <processor name="MySelectEvents" type="SelectEvents">
 <!--SelectEvent Processor selects certain events from input files-->
  <!--First Event-->
  <parameter name="FirstEvent" type="int">0 </parameter>
  <!--Last Event-->
  <parameter name="LastEvent" type="int">0 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>



 <processor name="MySkipNEvents" type="SkipNEvents">
 <!--The output condition of this processor is false for the first n LCEvents. Afterwards it is set to true.-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--number of LCEvents to skip-->
  <parameter name="nSkip" type="int">0 </parameter>
</processor>


</marlin>
