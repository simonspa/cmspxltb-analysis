<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->


<!--##########################################
    #                                        #
    #     Example steering file for converter#
    #	  Version: $Id$                      #
    #                                        #
    ##########################################-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">
 <execute>
   <processor name="MyAIDAProcessor"/>
   <processor name="MyEUTelNativeReader"/>
   <processor name="MyEUTelAutoPedestalNoiseProcessor"/>
   <processor name="MyEUTelHotPixelKiller"/>
   <processor name="MyEUTelOutputProcessor"/>
 </execute>

 <global>
  <parameter name="LCIOInputFiles"> </parameter>
  <!--limit the number of processed records (run+evt): -->
  <parameter name="MaxRecordNumber" value="@MaxRecordNumber@" />  
  <parameter name="SkipNEvents" value="0" />  
  <parameter name="SupressCheck" value="false" />  
  <parameter name="Verbosity" options="DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT"> @VerbosityLevel@  </parameter> 
  <parameter name="basepath"> </parameter>
 </global>

<processor name="MyAIDAProcessor" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int"> 1 </parameter>
  <!-- filename without extension-->
  <parameter name="FileName" type="string"> @HistoPath@/@Output@-converter-histo </parameter>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string">root </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

<processor name="MyEUTelNativeReader" type="EUTelNativeReader">
 <!--Reads data streams produced by EUDAQ and produced the corresponding LCIO output-->
  <!--This is the depfet produced output collection-->
  <parameter name="DEPFETOutputCollection" type="string" lcioOutType="TrackerData"> rawdata_dep </parameter>
  <!--This is the eudrb producer output collection when read in RAW mode-->
  <parameter name="EUBRDRawModeOutputCollection" type="string" lcioOutType="TrackerRawData"> rawdata </parameter>
  <!--Type of sparsified pixel data structure (use SparsePixelType enumerator)-->
  <!--parameter name="EUDRBSparsePixelType" type="int">1 </parameter-->
  <!--This si the mimotel output collection when read in ZS mode-->
  <parameter name="EUDRBZSModeOutputCollection" type="string" lcioOutType="TrackerData"> zsdata </parameter>
  <!--The geometry identification number-->
  <parameter name="GeoID" type="int"> 0 </parameter>
  <!--This is the input file name-->
  <parameter name="InputFileName" type="string"> @NativeFolder@/run@RunNumber@.raw </parameter>
  <!--Resynchronize the events based on the TLU trigger ID-->
  <parameter name="SyncTriggerID" type="bool"> true </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

<processor name="MyEUTelAutoPedestalNoiseProcessor" type="EUTelAutoPedestalNoiseProcessor">
 <!--EUTelAutoPedestalNoiseProcessor produces initial pedestal / noise / status with user provided values-->
  <!--The initial value of noise (one value for detector)-->
  <parameter name="InitNoiseValue" type="FloatVec">1 1 1 1 1 1  </parameter>
  <!--The initial value of pedestal (one value for detector)-->
  <parameter name="InitPedestalValue" type="FloatVec">0 0 0 0 0 0  </parameter>
  <!--The maximum pixel along x (default 255, one value per detector)-->
  <parameter name="MaxXVector" type="IntVec">1151 1151 1151 1151 1151 1151  </parameter>
  <!--The maximum pixel along y (default 255, one value per detector)-->
  <parameter name="MaxYVector" type="IntVec">575 575 575 575 575 575  </parameter>
  <!--The minimum pixel along x (default 0, one value per detector)-->
  <!--parameter name="MinXVector" type="IntVec">0 0 0 0 0 0  </parameter-->
  <!--The minimum pixel along y (default 0, one value per detector)-->
  <!--parameter name="MinYVector" type="IntVec">0 0 0 0 0 0  </parameter-->
  <!--Noise local collection-->
  <parameter name="NoiseCollectionName" type="string" lcioOutType="TrackerData"> m26_noise </parameter>
  <!--Pedestal local collection-->
  <parameter name="PedestalCollectionName" type="string" lcioOutType="TrackerData"> m26_pedestal </parameter>
  <!--The sensorID for the generated collection (one per detector)-->
  <!--parameter name="SensorIDVec" type="IntVec">0 1 2 3 4 5  </parameter-->
  <!--Pixel status collection-->@VerbosityLevel@
  <parameter name="StatusCollectionName" type="string" lcioOutType="TrackerRawData"> m26_status </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

<processor name="MyEUTelHotPixelKiller" type="EUTelHotPixelKiller">
 <!--EUTelHotPixelKiller periodically check for pixel singing loud too often and remove them from the analysis-->
  <!--This flag is used to initialise simple data decoding and hot pixel finder (0-no, 1-yes)-->
  <parameter name="BuildHotPixelDatabase" type="int">1 </parameter>
  <!--The list of sensor ids that have to be excluded from the clustering.-->
  <!--parameter name="ExcludedPlanes" type="IntVec"> </parameter-->
  <!--This is the name of the hot pixel collection to be saved into the output slcio file-->
  <!--parameter name="HotPixelCollectionName" type="string">hotpixel </parameter-->
  <!--This is the name of the LCIO file name with the input/output hot pixel collection  (add .slcio)-->
  <parameter name="HotPixelDBFile" type="string" value="@DBPath@/run@HotPixelRunNumber@-hotpixel-db.slcio"/>
  <!--Write mode for HotPixelDB file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string">WRITE_NEW </parameter>
  <!--This float number [0,1] represents the maximum allowed firing frequency within the selected number of event per cycle-->
  <parameter name="MaxAllowedFiringFreq" type="float">0.05 </parameter>
  <!--The number of events to be considered for each update cycle-->
  <parameter name="NoOfEventPerCycle" type="int">100 </parameter>
  <!--The total number of hot pixel cycle-->
  <parameter name="TotalNoOfCycle" type="int" value="1"/>
  <!--Noise (input) collection name-->
  <parameter name="NoiseCollectionName" type="string" lcioInType="TrackerData">m26_noise </parameter>
  <!--Pixel status (input) collection name-->
  <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData">m26_status </parameter>
  <!--The total number of hot pixel cycle-->
  <parameter name="TotalNoOfCycle" type="int">10 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--Input of Zero Suppressed data-->
  <parameter name="ZSDataCollectionName" type="string" lcioInType="TrackerData">zsdata_m26 </parameter>
</processor>

<processor name="MyEUTelOutputProcessor" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <!--parameter name="DropCollectionNames" type="StringVec">TPCHits HCalHits  </parameter-->
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec">SimTrackerHit SimCalorimeterHit  </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec">MCParticlesSkimmed  </parameter-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec">MyPreciousSimTrackerHits  </parameter-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string">@LcioRawFolder@/run@RunNumber@.slcio </parameter>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string">WRITE_NEW </parameter>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool">true </parameter>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int">1992294 </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

</marlin>
